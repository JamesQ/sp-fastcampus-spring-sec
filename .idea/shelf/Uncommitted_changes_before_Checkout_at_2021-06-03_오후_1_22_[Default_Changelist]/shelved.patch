Index: server/login-basic/src/main/java/com/sp/fc/web/config/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sp.fc.web.config;\r\n\r\nimport org.springframework.boot.autoconfigure.security.servlet.PathRequest;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchy;\r\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl;\r\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\nimport org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.builders.WebSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\r\nimport org.springframework.security.core.userdetails.User;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\n\r\n@EnableWebSecurity(debug = true)\r\n@EnableGlobalMethodSecurity(prePostEnabled = true)\r\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    private final CustomAuthDetail customAuthDetail;\r\n\r\n    public SecurityConfig(CustomAuthDetail customAuthDetail) {\r\n        this.customAuthDetail = customAuthDetail;\r\n    }\r\n\r\n    @Override\r\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth\r\n                .inMemoryAuthentication()\r\n                .withUser(\r\n                        User.withDefaultPasswordEncoder()\r\n                                .username(\"user1\")\r\n                                .password(\"1111\")\r\n                                .roles(\"USER\")\r\n                ).withUser(\r\n                User.withDefaultPasswordEncoder()\r\n                        .username(\"admin\")\r\n                        .password(\"2222\")\r\n                        .roles(\"ADMIN\")\r\n        );\r\n    }\r\n\r\n    @Bean\r\n    RoleHierarchy roleHierarchy(){\r\n        RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();\r\n        roleHierarchy.setHierarchy(\"ROLE_ADMIN > ROLE_USER\");\r\n        return roleHierarchy;\r\n    }\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http\r\n                .authorizeRequests(request->\r\n                    request.antMatchers(\"/\").permitAll()\r\n                            .anyRequest().authenticated()\r\n                )\r\n                .formLogin(login->\r\n                        login.loginPage(\"/login\")\r\n                        .loginProcessingUrl(\"/loginprocess\")\r\n                        .permitAll()\r\n                        .defaultSuccessUrl(\"/\", false)\r\n                        .authenticationDetailsSource(customAuthDetail)\r\n                        .failureUrl(\"/login-error\")\r\n                )\r\n                .logout(logout->\r\n                        logout.logoutSuccessUrl(\"/\"))\r\n                .exceptionHandling(error->\r\n                        error.accessDeniedPage(\"/access-denied\")\r\n                )\r\n                ;\r\n    }\r\n\r\n    @Override\r\n    public void configure(WebSecurity web) throws Exception {\r\n        web.ignoring()\r\n                .requestMatchers(\r\n                        PathRequest.toStaticResources().atCommonLocations()\r\n                )\r\n        ;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/login-basic/src/main/java/com/sp/fc/web/config/SecurityConfig.java b/server/login-basic/src/main/java/com/sp/fc/web/config/SecurityConfig.java
--- a/server/login-basic/src/main/java/com/sp/fc/web/config/SecurityConfig.java	(revision 24ae2189bc0f4c4157d6e803a1d6f02c13fd9b65)
+++ b/server/login-basic/src/main/java/com/sp/fc/web/config/SecurityConfig.java	(date 1622694116307)
@@ -1,83 +1,29 @@
 package com.sp.fc.web.config;
 
-import org.springframework.boot.autoconfigure.security.servlet.PathRequest;
-import org.springframework.context.annotation.Bean;
-import org.springframework.security.access.hierarchicalroles.RoleHierarchy;
-import org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl;
-import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
-import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.builders.WebSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
 import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
-import org.springframework.security.core.userdetails.User;
-import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
-import org.springframework.security.crypto.password.PasswordEncoder;
 
 @EnableWebSecurity(debug = true)
-@EnableGlobalMethodSecurity(prePostEnabled = true)
 public class SecurityConfig extends WebSecurityConfigurerAdapter {
 
-    private final CustomAuthDetail customAuthDetail;
-
-    public SecurityConfig(CustomAuthDetail customAuthDetail) {
-        this.customAuthDetail = customAuthDetail;
-    }
-
-    @Override
-    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
-        auth
-                .inMemoryAuthentication()
-                .withUser(
-                        User.withDefaultPasswordEncoder()
-                                .username("user1")
-                                .password("1111")
-                                .roles("USER")
-                ).withUser(
-                User.withDefaultPasswordEncoder()
-                        .username("admin")
-                        .password("2222")
-                        .roles("ADMIN")
-        );
-    }
-
-    @Bean
-    RoleHierarchy roleHierarchy(){
-        RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();
-        roleHierarchy.setHierarchy("ROLE_ADMIN > ROLE_USER");
-        return roleHierarchy;
-    }
 
     @Override
     protected void configure(HttpSecurity http) throws Exception {
         http
-                .authorizeRequests(request->
-                    request.antMatchers("/").permitAll()
-                            .anyRequest().authenticated()
-                )
-                .formLogin(login->
-                        login.loginPage("/login")
-                        .loginProcessingUrl("/loginprocess")
-                        .permitAll()
-                        .defaultSuccessUrl("/", false)
-                        .authenticationDetailsSource(customAuthDetail)
-                        .failureUrl("/login-error")
-                )
-                .logout(logout->
-                        logout.logoutSuccessUrl("/"))
-                .exceptionHandling(error->
-                        error.accessDeniedPage("/access-denied")
-                )
+                .authorizeRequests(request->{
+                    request
+                            .antMatchers("/**").permitAll()
+                            ;
+                })
                 ;
     }
 
     @Override
     public void configure(WebSecurity web) throws Exception {
-        web.ignoring()
-                .requestMatchers(
-                        PathRequest.toStaticResources().atCommonLocations()
-                )
-        ;
+        web.ignoring().requestMatchers(
+
+        )
     }
-
 }
Index: .gradle/buildOutputCleanup/cache.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/buildOutputCleanup/cache.properties b/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
--- /dev/null	(date 1622693771382)
+++ b/.gradle/buildOutputCleanup/cache.properties	(date 1622693771382)
@@ -0,0 +1,2 @@
+#Thu Jun 03 11:05:25 KST 2021
+gradle.version=6.7.1
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1622693771397)
+++ b/.idea/compiler.xml	(date 1622693771397)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Gradle Imported" enabled="true">
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="false">
+          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.projectlombok/lombok/1.18.16/6dc192c7f93ec1853f70d59d8a6dcf94eb42866/lombok-1.18.16.jar" />
+        </processorPath>
+        <module name="sp-fastcampus-spring-sec.server-basic-test.main" />
+        <module name="sp-fastcampus-spring-sec.server-login-custom-filter.test" />
+        <module name="sp-fastcampus-spring-sec.server-basic-test.test" />
+        <module name="sp-fastcampus-spring-sec.server-login-basic.main" />
+        <module name="sp-fastcampus-spring-sec.server-login-custom-filter.main" />
+        <module name="sp-fastcampus-spring-sec.server-login-basic.test" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1622693771327)
+++ b/.idea/misc.xml	(date 1622693771327)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="FrameworkDetectionExcludesConfiguration">
+    <file type="web" url="file://$PROJECT_DIR$" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1622693771482)
+++ b/.idea/.gitignore	(date 1622693771482)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1622693771559)
+++ b/.idea/vcs.xml	(date 1622693771559)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries-with-intellij-classes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries-with-intellij-classes.xml b/.idea/libraries-with-intellij-classes.xml
new file mode 100644
--- /dev/null	(date 1622693771413)
+++ b/.idea/libraries-with-intellij-classes.xml	(date 1622693771413)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="libraries-with-intellij-classes">
+    <option name="intellijApiContainingLibraries">
+      <list>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIU" />
+          <option name="groupId" value="com.jetbrains.intellij.idea" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIU" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIC" />
+          <option name="groupId" value="com.jetbrains.intellij.idea" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIC" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPY" />
+          <option name="groupId" value="com.jetbrains.intellij.pycharm" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPY" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPC" />
+          <option name="groupId" value="com.jetbrains.intellij.pycharm" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPC" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="clion" />
+          <option name="groupId" value="com.jetbrains.intellij.clion" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="clion" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="riderRD" />
+          <option name="groupId" value="com.jetbrains.intellij.rider" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="riderRD" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="goland" />
+          <option name="groupId" value="com.jetbrains.intellij.goland" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="goland" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1622693771429)
+++ b/.idea/jarRepositories.xml	(date 1622693771429)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenRepo" />
+      <option name="name" value="MavenRepo" />
+      <option name="url" value="https://repo.maven.apache.org/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: server/login-basic/src/main/resources/templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"ko\" xmlns:th=\"http://www.thymeleaf.org\" xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Title</title>\r\n    <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.css}\">\r\n    <link rel=\"stylesheet\" th:href=\"@{/css/index.css}\">\r\n</head>\r\n<body>\r\n\r\n<div class=\"container center-contents\">\r\n    <div class=\"row\">\r\n        <h1 class=\"title display-5\"> 메인 페이지 </h1>\r\n    </div>\r\n\r\n    <div class=\"links\">\r\n\r\n        <div class=\"link\" sec:authorize=\"!authenticated\">\r\n            <a href=\"/login\">  로그인 </a>\r\n        </div>\r\n        <div class=\"link\" sec:authorize=\"authenticated\">\r\n            <a href=\"/user-page\">  유저 페이지  </a>\r\n        </div>\r\n        <div class=\"link\" sec:authorize=\"authenticated\">\r\n            <a href=\"/admin-page\">  관리자 로그인 </a>\r\n        </div>\r\n        <div class=\"link\" sec:authorize=\"authenticated\">\r\n            <form th:action=\"@{/logout}\" method=\"post\">\r\n                <button class=\"btn btn-info\" type=\"submit\">  로그아웃 </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script th:src=\"@{/js/bootstrap.js}\" />\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/login-basic/src/main/resources/templates/index.html b/server/login-basic/src/main/resources/templates/index.html
--- a/server/login-basic/src/main/resources/templates/index.html	(revision 24ae2189bc0f4c4157d6e803a1d6f02c13fd9b65)
+++ b/server/login-basic/src/main/resources/templates/index.html	(date 1622693762926)
@@ -15,20 +15,22 @@
 
     <div class="links">
 
-        <div class="link" sec:authorize="!authenticated">
+        <div class="link">
             <a href="/login">  로그인 </a>
         </div>
-        <div class="link" sec:authorize="authenticated">
+        <div class="link">
+            <a href="/login-error">  로그인 에러  </a>
+        </div>
+        <div class="link">
+            <a href="/access-denied">  접근 에러  </a>
+        </div>
+        <div class="link">
             <a href="/user-page">  유저 페이지  </a>
         </div>
-        <div class="link" sec:authorize="authenticated">
+        <div class="link">
             <a href="/admin-page">  관리자 로그인 </a>
         </div>
-        <div class="link" sec:authorize="authenticated">
-            <form th:action="@{/logout}" method="post">
-                <button class="btn btn-info" type="submit">  로그아웃 </button>
-            </form>
-        </div>
+
     </div>
 </div>
 <script th:src="@{/js/bootstrap.js}" />
Index: server/login-basic/src/main/resources/templates/loginForm.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"ko\" xmlns:th=\"http://www.thymeleaf.org\" xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Title</title>\r\n    <link rel=\"stylesheet\" th:href=\"@{/css/bootstrap.css}\">\r\n    <link rel=\"stylesheet\" th:href=\"@{/css/login.css}\">\r\n</head>\r\n<body>\r\n\r\n\r\n<div class=\"container center-contents\">\r\n    <div class=\"row\">\r\n        <form class=\"form-signin\" method=\"post\" th:action=\"@{/loginprocess}\">\r\n            <h1 class=\"h3 mb-3 font-weight-normal\"> 로그인 </h1>\r\n            <label for=\"username\" class=\"sr-only\">로그인 아이디</label>\r\n            <input id=\"username\"\r\n                   name=\"username\"\r\n                   class=\"form-control\"\r\n                   placeholder=\"아이디를 입력해 주세요.\"\r\n                   required autofocus>\r\n            <label for=\"password\" class=\"sr-only\">비밀번호</label>\r\n            <input type=\"password\"\r\n                   id=\"password\"\r\n                   name=\"password\"\r\n                   class=\"form-control\"\r\n                   placeholder=\"비밀번호를 입력해 주세요\"\r\n                   required>\r\n            <div class=\"checkbox mb-3\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"remember-me\"> 로그인 기억하기\r\n                </label>\r\n            </div>\r\n            <button class=\"btn btn-lg btn-primary btn-block\"  type=\"submit\"> 로그인 </button>\r\n            <div class=\"error-message\" th:if=\"${loginError}\">\r\n                <span> 아이디나 패스워드가 올바르지 않습니다. </span>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n<script th:src=\"@{/js/bootstrap.js}\" />\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/login-basic/src/main/resources/templates/loginForm.html b/server/login-basic/src/main/resources/templates/loginForm.html
--- a/server/login-basic/src/main/resources/templates/loginForm.html	(revision 24ae2189bc0f4c4157d6e803a1d6f02c13fd9b65)
+++ b/server/login-basic/src/main/resources/templates/loginForm.html	(date 1622693771228)
@@ -11,7 +11,7 @@
 
 <div class="container center-contents">
     <div class="row">
-        <form class="form-signin" method="post" th:action="@{/loginprocess}">
+        <form class="form-signin" method="post" action="/login">
             <h1 class="h3 mb-3 font-weight-normal"> 로그인 </h1>
             <label for="username" class="sr-only">로그인 아이디</label>
             <input id="username"
Index: server/login-basic/src/main/java/com/sp/fc/web/config/RequestInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sp.fc.web.config;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Builder\r\npublic class RequestInfo {\r\n\r\n    private LocalDateTime loginTime;\r\n    private String remoteIp;\r\n    private String sessionId;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/login-basic/src/main/java/com/sp/fc/web/config/RequestInfo.java b/server/login-basic/src/main/java/com/sp/fc/web/config/RequestInfo.java
--- a/server/login-basic/src/main/java/com/sp/fc/web/config/RequestInfo.java	(revision 24ae2189bc0f4c4157d6e803a1d6f02c13fd9b65)
+++ b/server/login-basic/src/main/java/com/sp/fc/web/config/RequestInfo.java	(date 1622693771526)
@@ -12,8 +12,7 @@
 @NoArgsConstructor
 @Builder
 public class RequestInfo {
-
-    private LocalDateTime loginTime;
     private String remoteIp;
     private String sessionId;
+    private LocalDateTime loginTime;
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1622693771575)
+++ b/.idea/gradle.xml	(date 1622693771575)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="$PROJECT_DIR$/../../../../_Tools/gradle-7.0.2" />
+        <option name="gradleJvm" value="#JAVA_HOME" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/server/basic-test" />
+            <option value="$PROJECT_DIR$/server/login-basic" />
+            <option value="$PROJECT_DIR$/server/login-custom-filter" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: server/login-basic/src/main/java/com/sp/fc/web/config/CustomAuthDetailsSource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/login-basic/src/main/java/com/sp/fc/web/config/CustomAuthDetailsSource.java b/server/login-basic/src/main/java/com/sp/fc/web/config/CustomAuthDetailsSource.java
new file mode 100644
--- /dev/null	(date 1622693771614)
+++ b/server/login-basic/src/main/java/com/sp/fc/web/config/CustomAuthDetailsSource.java	(date 1622693771614)
@@ -0,0 +1,19 @@
+package com.sp.fc.web.config;
+
+import org.springframework.security.authentication.AuthenticationDetailsSource;
+import org.springframework.stereotype.Component;
+
+import javax.servlet.http.HttpServletRequest;
+import java.time.LocalDateTime;
+
+@Component
+public class CustomAuthDetailsSource implements AuthenticationDetailsSource<HttpServletRequest, RequestInfo> {
+    @Override
+    public RequestInfo buildDetails(HttpServletRequest request) {
+        return RequestInfo.builder()
+                .remoteIp(request.getRemoteAddr())
+                .sessionId(request.getSession().getId())
+                .loginTime(LocalDateTime.now())
+                .build();
+    }
+}
